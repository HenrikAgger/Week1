Use: README.md file


Day 1) : 19-08-2019
Understand the fundamental benefits in having the same set up locally for all developers, 
as on the production server
Start a local Virtual Ubuntu 18.04 Server using Vagrant
SSH into a local Virtual Ubuntu 18.04 server, started by Vagrant and Virtual Box
Connect to a MySQL server running on a local Virtual Ubuntu 18.04 server, started by Vagrant and Virtual Box


Day 2) : 20-08-2019
1) Redegøre for ORM frameworks generelt og deres pros/cons
ORM stands for Object-relational mapping. 
ORM is a programming technique for converting data between incompatible type systems using object-oriented programming languages.

Object-relational mapping (ORM, O/RM, and O/R mapping tool) in computer science
ORM is a programming technique for converting data between incompatible type systems using object-oriented programming languages.
This creates, in effect, a "virtual object database" that can be used from within the programming language.

 
Pros
- ORM often reduces the amount of code that needs to be written. (Do less work).
- ORM avoids low level JDBC and SQL code
- ORM provides database and scema independence
- ORM allows to use the OO-paradigm
- ORM often protects against SQL Injection.

Cons
- Disadvantages of ORM tools generally stem from the high level of abstraction obscuring 
- what is actually happening in the implementation code. 
- Also, heavy reliance on ORM software has been cited as a major factor in producing 
  poorly designed databases.
- Relational database management systems can only store and manipulate scalar values
- such as integers and strings organized within tables.
 
2) Redegøre for forskellen mellem JPA og andre persistensmetoder
Most people would recommend that you use the JPA standard. 
When using JPA there is a flexiblity to swich persistence providers.

3) Redegøre for de mest brugte klasser og metoder i JPA


4) Oprette et basalt Java projekt med JPA og benytte annoteringer til 
at persistere entiteter i database

5) Redegøre for og demonstrere brug af begreber som EntityManager, 
EntityManagerFactory samt Persistence.xml



6) Demonstrere Insert og Select


Day 3 - 21-08-2019
1) Redegøre for begrebet Restfull webservices



2) Redegøre for konventioner ved opbygning af REST api'er

3) Oprette et Java projekt med REST endpoints

4) Implementere kode indeholdende de mest grundlæggende REST annotationer (GET kun)
@GET 

5) Håndtere parametre i REST endpoints i egne kodeeksempler

6) Redegøre for, og demonstrere det udleverede start project til brug for JPA/REST-projekter


Day 4 : 22-08-2019
1) Designe simple GET-endpoints med brug af en underliggende database tilgået via JPA
2) Kunne redegøre for nødvendigheden af i brug af JSON
JSON (Javascript Object Notation) it is a way of representing orbitrary (vilkårlige) data in a Asci format can easyly be translated on the internet that can be stored on disks 
that can be processed by most programlanguages. 
Free from representing a specifik program.

3) Kunne redegøre for korrekt JSON syntaks

4) Kunne redegøre for Data Tranfer Objects (DTO's) og serialisering mellem Java objekter 
   og JSON





